# Password management 
# (see https://wiki.archlinux.org/index.php/mutt#Passwords_management)
source "gpg2 --quiet --for-your-eyes-only --no-tty --decrypt $HOME/.mutt/persgm_creds.gpg |"
#
# $HOME/.mutt/persgm_creds.gpg is an encrypted file containing
#
#     set my_persgm_user = "YYY"
#     set my_persgm_passwd = "XXX"
#     set my_persgm_from = "ZZZ"
#
# where 
#
#     XXX is the IMAP and SMTP username
#     YYY is the IMAP and SMTP password
#     ZZZ is an email alias
#
# This file was encrypted with:
#
#     gpg2 --encrypt --recipient 'myemailaddr' $HOME/.mutt/persgm_creds
#
# to produce $HOME/.mutt/persgm_creds.gpg
# 
# The plaintext was then shredded using 
#
#     shred --exact --remove $HOME/.mutt/persgm_creds

# Me
set from = $my_persgm_from
set use_from = yes

# My credentials
set imap_user = $my_persgm_user
set imap_pass=$my_persgm_passwd
set smtp_url = smtps://$my_persgm_user@smtp.gmail.com
set smtp_pass = $my_persgm_passwd
set record=""
set ssl_starttls=yes
set ssl_force_tls=yes

# My mailboxes
set folder = 'imaps://imap.gmail.com:993'
set spoolfile = '+INBOX'
set postponed ='+[Google Mail]/Drafts'
set trash = '+[Google Mail]/Bin'
# Do not need to set 'record' to 'Sent Mail' if using the GMail SMTP server as
# it handles saving the sent mail
#set record = "+[Google Mail]/Sent Mail"
unset record

# Where to put the stuff
set header_cache = ~/.mutt/cache/persgm/headers
set message_cachedir = ~/.mutt/cache/persgm/bodies
set certificate_file = ~/.mutt/certificates

# Key bindings
# Gmail-friendly navigation:
macro index,pager y "<save-message>=[Google Mail]/All Mail<enter><enter>" "Archive"
#macro index,pager d "<save-message>=[Google Mail]/Bin<enter><enter>" "Trash"
macro index gi "<change-folder>=INBOX<enter>" "Go to inbox"
macro index ga "<change-folder>=[Google Mail]/All Mail<enter>" "Go to all mail"
macro index gs "<change-folder>=[Google Mail]/Starred<enter>" "Go to starred messages"
macro index gd "<change-folder>=[Google Mail]/Drafts<enter>" "Go to drafts"

# Account-specific address book using goobook; first need to 
# $ goobook -c ~/.mutt/goobookrc_persgm authenticate
set query_command="goobook -c ~/.mutt/goobookrc_persgm query '%s'"
macro index,pager A "<pipe-message>goobook -c ~/.mutt/goobookrc_persgm add<return>" "add sender to google contacts"
bind editor <Tab> complete-query
# When composing an email message within mutt, Tab will now search your Google
# contacts. While viewing messages a will add the sender to Google contacts. 

source ~/.mutt/muttrc.common
